version: "3.8"
name: boilerplate
services:
  postgres:
    image: postgres:12
    container_name: boilerplate-database
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - boilerplate_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
  
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: boilerplate-identity
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: microscope
      KEYCLOAK_DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: postgres
      DB_USER: postgres
      DB_PASSWORD: root
    ports:
      - 8083:8080
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    depends_on:
      - postgres
        
  rabbitmq:
    container_name: boilerplate-bus
    image: masstransit/rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      # "test: rabbitmq-diagnostics check_port_connectivity" does not work with masstransit/rabbitmq
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 10
      
  todoapp-service:
    image: boilerplate/todoapp-service:latest
    container_name: boilerplate-todoapp-service
    ports:
      - "5288:80"
    depends_on:
      - "postgres"

  bff:
    image: boilerplate/bff:latest
    container_name: boilerplate-bff
    ports:
      - "5215:80"
        
  docs:
    image: boilerplate/docs:latest
    container_name: boilerplate-docs
    ports:
      - "9000:80"

# Backend as a Service (BaaS) for prototyping microservices
  baas:
    image: hasura/graphql-engine:v2.31.0-ce
    container_name: boilerplate-baas
    ports:
      - "8080:8000"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:root@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: microscope
      HASURA_GRAPHQL_SERVER_PORT: 8000
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"

volumes:
  boilerplate_data:
