@page "/TodoList"
@using Microscope.Boilerplate.Clients.SDK.GraphQL
@using Microscope.Boilerplate.Clients.Web.Blazor.Pages.TodoLists.Components
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>Todo lists</PageTitle>

<MudToolBar>
    <MudText Typo="Typo.h6">Todo lists</MudText>
    <MudSpacer />
    <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="OpenTodoListDialog" />
</MudToolBar>

<MudContainer>
    <UseGetTodolists Context="result">
        <ChildContent>
            <MudDataGrid T="IGetTodolists_Todolists" Items="result.Todolists">
                <Columns>
                    <PropertyColumn Property="x => x.Name" />
                    <TemplateColumn T="IGetTodolists_Todolists" Title="Actions" Filterable="false" Sortable="false">
                        <CellTemplate>
                            <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Edit" Color="Color.Default" OnClick="() => GoToDetails(context.Item.Id)"/>
                            <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"/>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        </ChildContent>
        <ErrorContent>
            @result.First().Message
        </ErrorContent>
        <LoadingContent>
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mt-4" />
        </LoadingContent>
    </UseGetTodolists>
</MudContainer>

@code
{
    private void GoToDetails(Guid itemId)
    {
        _navigationManager.NavigateTo($"/TodoList/{itemId}" );
    }

    private async void OpenTodoListDialog()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = true, CloseButton = true, DisableBackdropClick = true };
        var parameters = new DialogParameters(){};

        var dialog = _dialogService.Show<TodoListDialog>(null, parameters, options);

        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            var id = (Guid)result.Data;
            _navigationManager.NavigateTo($"/TodoList/{id}");
        }
    }
}
