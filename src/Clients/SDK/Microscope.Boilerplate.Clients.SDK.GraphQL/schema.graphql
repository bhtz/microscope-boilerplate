schema {
  query: Query
  mutation: Mutation
}

"The `Upload` scalar type represents a file upload."
scalar Upload

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

type Mutation {
  createTodoList(command: CreateTodoListCommandInput!): UUID!
  addTodoItem(command: CreateTodoItemCommandInput!): UUID!
  toggleTodoItem(command: ToggleTodoItemCommandInput!): Boolean!
  deleteTodoItem(command: DeleteTodoItemCommandInput!): Boolean!
  deleteTodoList(command: DeleteTodoListCommandInput!): Boolean!
  updateTodoList(command: UpdateTodoListCommandInput!): Boolean!
  addTag(command: AddTagCommandInput!): Boolean!
  removeTag(command: RemoveTagCommandInput!): Boolean!
}

type Query {
  healthCheck: String!
  features: [KeyValuePairOfStringAndBoolean!]!
  todolists(search: String): [TodoListQueryResult!]!
  todolistById(id: UUID!): TodoListByIdQueryResult!
}

input CreateTodoListCommandInput {
  name: String!
}

scalar UUID

input CreateTodoItemCommandInput {
  todoListId: UUID!
  label: String!
}

input ToggleTodoItemCommandInput {
  todoListId: UUID!
  todoItemId: UUID!
}

input DeleteTodoItemCommandInput {
  todoListId: UUID!
  todoItemId: UUID!
}

input DeleteTodoListCommandInput {
  todoListId: UUID!
}

input UpdateTodoListCommandInput {
  todoListId: UUID!
  name: String!
}

input AddTagCommandInput {
  todoListId: UUID!
  label: String!
  color: String!
}

input RemoveTagCommandInput {
  todoListId: UUID!
  label: String!
  color: String!
}

type KeyValuePairOfStringAndBoolean {
  key: String!
  value: Boolean!
}

type TodoListQueryResult {
  id: UUID!
  name: String!
  isCompleted: Boolean!
}

type TodoListByIdQueryResult {
  id: UUID!
  name: String!
  isCompleted: Boolean!
  todoItems: [TodoItemResult!]!
  tags: [TagResult!]!
}

type TagResult {
  label: String!
  color: String!
}

type TodoItemResult {
  id: UUID!
  label: String!
  isCompleted: Boolean!
}