@page "/user"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>User</PageTitle>

<FluentLabel Typo="Typography.H1">User</FluentLabel>
<FluentLabel Typo="Typography.Body">Ce composant montre la liste des revendications d'authentification des utilisateurs</FluentLabel>

@if (Claims is not null)
{
    <FluentListbox TOption="string">
        @foreach (var item in Claims)
        {
            <FluentOption Value="Item 3">
                <FluentIcon Value="@(new Icons.Regular.Size20.Star())" Slot="start"/>
                <b>@item.Type :</b> @item.Value.ToString()
            </FluentOption>
        }
    </FluentListbox>
}

@code
{
    private IEnumerable<Claim>? Claims { get; set; }
    private string? UserName { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Claims = authState.User?.Claims;
        UserName = authState.User?.Identity?.Name;
    }
}
