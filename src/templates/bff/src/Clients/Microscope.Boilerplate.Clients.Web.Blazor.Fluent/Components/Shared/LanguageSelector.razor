<FluentIcon Class="ml-4" OnClick="() => IsLanguageExpanded = !IsLanguageExpanded" Id="LanguageSelector" Value="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.LocalLanguage())" Style="margin-right: 10px; cursor: pointer;" Color="Color.Fill"/>

<FluentMenu Anchor="LanguageSelector" @bind-Open="IsLanguageExpanded">
    @foreach (var language in languages)
    {
        <FluentMenuItem
            OnClick="(() => ChangeLanguageAsync(language.Code))">
            @language.DisplayName
        </FluentMenuItem>
    }
</FluentMenu>

@code
{
    public bool IsLanguageExpanded { get; set; }
    
    private async Task ChangeLanguageAsync(string? languageCode)
    {
        var uri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var uriEscaped = Uri.EscapeDataString(uri);
        NavigationManager.NavigateTo($"culture?culture={languageCode}&redirectUri={uriEscaped}", forceLoad: true);
    }
    
    public class LanguageCodes
    {
        public string? DisplayName { get; set; }
        public string? Code { get; set; }
    }

    private List<LanguageCodes> languages = new List<LanguageCodes>()
    {
        new LanguageCodes
        {
            Code = "fr-FR",
            DisplayName = "Francais"
        },
        new LanguageCodes
        {
            Code = "en-US",
            DisplayName= "English"
        }
    };
}