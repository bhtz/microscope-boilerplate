@using Microscope.Boilerplate.Clients.Web.Blazor.Services
@inject IFeatureManagementService FeatureManagementService;
@inherits Microscope.Boilerplate.Clients.Web.Blazor.Components.Shared.InteractiveAutoPersistentPage

@if (featureIsEnabled)
{
    @ChildContent
}

@code {
    private bool featureIsEnabled = false;

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string FlagName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(FlagName)) return;
        
        featureIsEnabled = await GetPersistentState(nameof(featureIsEnabled), async () =>
        {
            var features = await FeatureManagementService.GetFeatureManagement();
            return features != null && features.FirstOrDefault(x => x.Key == FlagName).Value;
        });
    }
}