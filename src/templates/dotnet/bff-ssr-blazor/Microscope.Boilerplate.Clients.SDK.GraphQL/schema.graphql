schema {
  query: Query
}

scalar date

scalar timestamptz

scalar uuid

type Query {
  continent(code: ID!): Continent
  continents(filter: ContinentFilterInput = {  }): [Continent!]!
  countries(filter: CountryFilterInput = {  }): [Country!]!
  country(code: ID!): Country
  language(code: ID!): Language
  languages(filter: LanguageFilterInput = {  }): [Language!]!
}

type Continent {
  code: ID!
  countries: [Country!]!
  name: String!
}

type Country {
  awsRegion: String!
  capital: String
  code: ID!
  continent: Continent!
  currencies: [String!]!
  currency: String
  emoji: String!
  emojiU: String!
  languages: [Language!]!
  name(lang: String): String!
  native: String!
  phone: String!
  phones: [String!]!
  states: [State!]!
  subdivisions: [Subdivision!]!
}

type Language {
  code: ID!
  name: String!
  native: String!
  rtl: Boolean!
}

type State {
  code: String
  country: Country!
  name: String!
}

type Subdivision {
  code: ID!
  emoji: String
  name: String!
}

input ContinentFilterInput {
  code: StringQueryOperatorInput
}

input CountryFilterInput {
  code: StringQueryOperatorInput
  continent: StringQueryOperatorInput
  currency: StringQueryOperatorInput
  name: StringQueryOperatorInput
}

input LanguageFilterInput {
  code: StringQueryOperatorInput
}

input StringQueryOperatorInput {
  eq: String
  in: [String!]
  ne: String
  nin: [String!]
  regex: String
}

"Delegates a resolver to a remote schema."
directive @delegate("The path to the field on the remote schema." path: String "The name of the schema to which this field shall be delegated to." schema: String!) on FIELD_DEFINITION

"Annotates the original name of a type."
directive @source("The original name of the annotated type." name: String! "The name of the schema to which this type belongs to." schema: String!) repeatable on OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION