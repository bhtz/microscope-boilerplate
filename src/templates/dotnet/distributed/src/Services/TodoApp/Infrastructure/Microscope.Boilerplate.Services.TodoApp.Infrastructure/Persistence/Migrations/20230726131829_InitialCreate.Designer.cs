// <auto-generated />
using System;
using Microscope.Boilerplate.Services.TodoApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Microscope.Boilerplate.Services.TodoList.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(TodoAppDbContext))]
    [Migration("20230726131829_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("boilerplate_todoapp")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.Entities.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<Guid>("TodoListId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("TodoItem", "boilerplate_todoapp");
                });

            modelBuilder.Entity("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.TodoList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatorMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TodoLists", "boilerplate_todoapp");
                });

            modelBuilder.Entity("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.Entities.TodoItem", b =>
                {
                    b.HasOne("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.TodoList", "TodoList")
                        .WithMany("TodoItems")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.TodoList", b =>
                {
                    b.OwnsMany("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.ValueObjects.Tag", "Tags", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<string>("Color")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<Guid>("TodoListId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("TodoListId");

                            b1.ToTable("Tag", "boilerplate_todoapp");

                            b1.WithOwner()
                                .HasForeignKey("TodoListId");
                        });

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Microscope.Boilerplate.Services.TodoApp.Domain.Aggregates.TodoListAggregate.TodoList", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
