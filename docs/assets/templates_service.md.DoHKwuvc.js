import{_ as e,c as l,o as t,a5 as i}from"./chunks/framework.B1C_J5Tt.js";const o="/microscope-boilerplate/assets/Service-aspire.CrPKU6OZ.png",r="/microscope-boilerplate/assets/Service-graphql.C_ZhbxHW.png",a="/microscope-boilerplate/assets/Service-scalar.CkAqlYzY.png",f=JSON.parse('{"title":"Modular monolith service","description":"","frontmatter":{},"headers":[],"relativePath":"templates/service.md","filePath":"templates/service.md"}'),s={name:"templates/service.md"},p=i('<h1 id="modular-monolith-service" tabindex="-1">Modular monolith service <a class="header-anchor" href="#modular-monolith-service" aria-label="Permalink to &quot;Modular monolith service&quot;">​</a></h1><blockquote><p>Modular monolith &amp; vertical slices oriented asp .net service</p></blockquote><p><strong>Aspire :</strong><img src="'+o+'" alt=""></p><p><strong>Nitro :</strong><img src="'+r+'" alt=""></p><p><strong>Scalar :</strong><img src="'+a+'" alt=""></p><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><p><strong>Architecture</strong></p><ul><li>✅ CQRS</li><li>✅ Vertical slices</li><li>✅ Modular monolith</li></ul><p><strong>API</strong></p><ul><li>✅ Grpc</li><li>✅ GraphQL</li><li>✅ Rest</li><li>✅ Feature management</li></ul><p><strong>Persistence</strong></p><ul><li>✅ MartenDB</li><li>✅ EFcore</li></ul><p><strong>IAM</strong></p><ul><li>✅ Keycloak (with customizable UI)</li></ul><p><strong>Doc</strong></p><ul><li>✅ scalar (Rest)</li><li>✅ nitro (GraphQL)</li></ul><p><strong>IAC</strong></p><ul><li>✅ Docker</li><li>✅ Aspire</li></ul><p><strong>Data</strong></p><ul><li>✅ Postgres</li><li>✅ Open telemetry</li></ul><h3 id="create-new-project" tabindex="-1">Create new project <a class="header-anchor" href="#create-new-project" aria-label="Permalink to &quot;Create new project&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dotnet new mcsp_service -n Acme</span></span></code></pre></div><h3 id="template-options" tabindex="-1">Template options <a class="header-anchor" href="#template-options" aria-label="Permalink to &quot;Template options&quot;">​</a></h3><ul><li><p>-D, --Docker</p><ul><li>Whether to include docker compose or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-A, --Aspire</p><ul><li>Whether to include aspire or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>--Grpc</p><ul><li>Whether to include Grpc API protocol proxy or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>--Graphql</p><ul><li>Whether to include GraphQL API protocol or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>--Rest</p><ul><li>Whether to include Rest API protocol or not.</li><li>Type : bool</li><li>Default : false</li></ul></li></ul>',24),n=[p];function c(u,h,d,m,g,_){return t(),l("div",null,n)}const v=e(s,[["render",c]]);export{f as __pageData,v as default};
