import{_ as e,c as l,o as t,a5 as i}from"./chunks/framework.B1C_J5Tt.js";const a="/microscope-boilerplate/assets/BFF.BcinJm6D.png",o="/microscope-boilerplate/assets/BFF-fluent.nWTrUllq.png",r="/microscope-boilerplate/assets/BFF-aspire.CWDv8qAC.png",b=JSON.parse('{"title":"BFF/Frontend","description":"","frontmatter":{},"headers":[],"relativePath":"templates/bff.md","filePath":"templates/bff.md"}'),s={name:"templates/bff.md"},n=i('<h1 id="bff-frontend" tabindex="-1">BFF/Frontend <a class="header-anchor" href="#bff-frontend" aria-label="Permalink to &quot;BFF/Frontend&quot;">​</a></h1><blockquote><p>Blazor frontend + BFF pattern</p></blockquote><p><strong>Material UI :</strong><img src="'+a+'" alt=""></p><p><strong>Fluent UI :</strong><img src="'+o+'" alt=""></p><p><strong>Aspire :</strong><img src="'+r+'" alt=""></p><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><p><strong>UI</strong></p><ul><li>✅ Material UI</li><li>✅ Fluent UI</li></ul><p><strong>BFF &amp; Gateway</strong></p><ul><li>✅ GraphQL Fusion gateway (HotChocolate)</li><li>✅ Proxying API (Yarp)</li><li>✅ Backend as a Service (Data api builder)</li><li>✅ Custom endpoint (REST / GraphQL)</li><li>✅ OIDC / Cookie authentication (Keycloak)</li><li>✅ Feature management</li><li>✅ Blazor SSR (Server side rendering)</li></ul><p><strong>FRONTEND</strong></p><ul><li>✅ Auto generated GraphQL SDK (StrawberryShake)</li><li>✅ Dark mode / Light mode</li><li>✅ Multi-theme</li><li>✅ I18N</li></ul><p><strong>IAM</strong></p><ul><li>✅ IAM (keycloak)</li></ul><p><strong>IAC</strong></p><ul><li>✅ Docker</li><li>✅ Aspire</li></ul><p><strong>Data</strong></p><ul><li>✅ Postgres</li><li>✅ Open telemetry</li></ul><h3 id="create-new-project" tabindex="-1">Create new project <a class="header-anchor" href="#create-new-project" aria-label="Permalink to &quot;Create new project&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dotnet new mcsp_bff -n Acme</span></span></code></pre></div><h3 id="template-options" tabindex="-1">Template options <a class="header-anchor" href="#template-options" aria-label="Permalink to &quot;Template options&quot;">​</a></h3><ul><li><p>-D, --Docker</p><ul><li>Whether to include docker compose or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-A, --Aspire</p><ul><li>Whether to include aspire or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-B, --BaaS</p><ul><li>Whether to include Backend as a Service container (DAB) or not</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-Y, --Yarp</p><ul><li>Whether to include microscope Yarp reverse proxy or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-G, --Gateway</p><ul><li>Whether to include GraphQL Fusion gateway or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-U, --UI</p><ul><li>Select UI framework (Material | Fluent)</li><li>Type : string</li><li>Default : Material</li></ul></li></ul>',22),p=[n];function c(u,d,h,m,f,g){return t(),l("div",null,p)}const F=e(s,[["render",c]]);export{b as __pageData,F as default};
