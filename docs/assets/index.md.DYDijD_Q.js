import{_ as e,c as t,o as a}from"./chunks/framework.B1C_J5Tt.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Microscope","text":"Boilerplate","tagline":"Opiniated starter kit portofolio","actions":[{"theme":"brand","text":"Getting started","link":"/getting-started"},{"theme":"alt","text":"Roadmap","link":"/roadmap"}]},"features":[{"title":"Distributed architecture template","details":"Blazor WASM Hosted, Material UI, Backend For Frontend, API REST + graphQL, Hexagonal architecture, IAM, Bus, Storage, Docker"},{"title":"Backend for frontend & Blazor SSR client template","details":"Backend for frontend (graphql gateway & yarp proxy), blazor SSR, Material UI, IAM, Docker"},{"title":"Documentation as code template","details":"Vitepress on top of asp net, Bounded Context Canvas, Architecture schema, Technology matrix, Architecture Decision Record, PRD/SDD"},{"title":"Command Line Interface template","details":"Spectre.Console, Cocona CLI"},{"title":"Desktop client template","details":"Avalonia UI, Material UI, MVVM, Layout"},{"title":"CLI Tool","details":"dotnet tool for better project generation"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),o={name:"index.md"};function r(n,i,l,c,d,s){return a(),t("div")}const f=e(o,[["render",r]]);export{m as __pageData,f as default};
