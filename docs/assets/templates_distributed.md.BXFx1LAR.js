import{_ as e,c as i,o as t,a5 as a}from"./chunks/framework.B1C_J5Tt.js";const m=JSON.parse('{"title":"Distributed","description":"","frontmatter":{},"headers":[],"relativePath":"templates/distributed.md","filePath":"templates/distributed.md"}'),s={name:"templates/distributed.md"},l=a(`<h1 id="distributed" tabindex="-1">Distributed <a class="header-anchor" href="#distributed" aria-label="Permalink to &quot;Distributed&quot;">​</a></h1><blockquote><p>Distributed architecture oriented template</p></blockquote><ul><li>✅ Blazor WASM</li><li>✅ Rest &amp; graphql sdk</li><li>✅ BFF (GraphQL gateway + reverse proxy + blazor host)</li><li>✅ &quot;TodoApp&quot; API service</li><li>✅ IAM (keycloak)</li><li>✅ Storage</li><li>✅ Postgres database</li><li>✅ OpenTelemetry (aspire + jaeger)</li><li>✅ Bus (rabbitMQ)</li><li>✅ Auto generated SDK (GraphQL + REST)</li><li>✅ IAC (docker + aspire)</li><li>✅ Light / Dark theme</li><li>✅ I18N</li><li>✅ Feature management</li></ul><h3 id="create-new-distributed-solution" tabindex="-1">Create new distributed solution <a class="header-anchor" href="#create-new-distributed-solution" aria-label="Permalink to &quot;Create new distributed solution&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dotnet new mcsp_distributed -n Acme.AwesomeProject</span></span></code></pre></div><h3 id="create-new-distributed-solution-with-cli" tabindex="-1">Create new distributed solution with CLI <a class="header-anchor" href="#create-new-distributed-solution-with-cli" aria-label="Permalink to &quot;Create new distributed solution with CLI&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dotnet new mcsp_distributed -n Acme.AwesomeProject -C</span></span></code></pre></div><h3 id="create-new-distributed-solution-with-terraform-iac-setup" tabindex="-1">Create new distributed solution with Terraform IAC setup <a class="header-anchor" href="#create-new-distributed-solution-with-terraform-iac-setup" aria-label="Permalink to &quot;Create new distributed solution with Terraform IAC setup&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dotnet new mcsp_distributed -n Acme.AwesomeProject -T</span></span></code></pre></div><h3 id="run-solution-with-docker-compose" tabindex="-1">Run solution (with docker compose) <a class="header-anchor" href="#run-solution-with-docker-compose" aria-label="Permalink to &quot;Run solution (with docker compose)&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd Acme.AwesomeProject/src/IAC/Docker</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">docker-compose up</span></span></code></pre></div><h3 id="run-solution-with-aspire" tabindex="-1">Run solution (with Aspire) <a class="header-anchor" href="#run-solution-with-aspire" aria-label="Permalink to &quot;Run solution (with Aspire)&quot;">​</a></h3><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd Acme.AwesomeProject/src/IAC/Aspire/Microscope.Boilerplate.IAC.Aspire</span></span></code></pre></div><h3 id="template-options" tabindex="-1">Template options <a class="header-anchor" href="#template-options" aria-label="Permalink to &quot;Template options&quot;">​</a></h3><ul><li><p>-B, --BaaS</p><ul><li>Whether to include Backend as a Service container (Hasura) or not</li><li>Default : false</li></ul></li><li><p>-T, --Terraform</p><ul><li>Whether to include Terraform IAC or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-C, --CLI</p><ul><li>Whether to include CLI or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-E, --E2E</p><ul><li>Whether to include E2E tests client or not.</li><li>Type : bool</li><li>Default : false</li></ul></li><li><p>-B, --BaaS</p><ul><li>Whether to include Backend as a Service container (Hasura) or not.</li><li>Type : bool</li><li>Default : false</li></ul></li></ul>`,15),o=[l];function r(n,d,c,p,u,h){return t(),i("div",null,o)}const k=e(s,[["render",r]]);export{m as __pageData,k as default};
