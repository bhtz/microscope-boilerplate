import{_ as e,o as a,c as n,X as o}from"./chunks/framework.4ab75e15.js";const _=JSON.parse('{"title":"Code language ADR (sample)","description":"","frontmatter":{},"headers":[],"relativePath":"Organization/Governance/ADR/decision1.md","filePath":"Organization/Governance/ADR/decision1.md"}'),t={name:"Organization/Governance/ADR/decision1.md"},i=o('<h1 id="code-language-adr-sample" tabindex="-1">Code language ADR (sample) <a class="header-anchor" href="#code-language-adr-sample" aria-label="Permalink to &quot;Code language ADR (sample)&quot;">​</a></h1><ul><li>📅 Date: 2023/01/11</li><li>👷 Decision made by: Product Owner, Developers</li></ul><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>Business objects have French names, but the execution team speaks English. The question is which language to use in our codebase.</p><h2 id="considered-options-💡" tabindex="-1">Considered Options 💡 <a class="header-anchor" href="#considered-options-💡" aria-label="Permalink to &quot;Considered Options 💡&quot;">​</a></h2><p>French ✅ Pro: We use the same words as the business team, making code reviews with them easier. 🚫 Con: The execution team does not understand it.</p><p>English ✅ Pro: The execution team will understand it. 🚫 Con: The business team will have to translate, and we might need to think a bit more while coding.</p><h2 id="decision-🏆" tabindex="-1">Decision 🏆 <a class="header-anchor" href="#decision-🏆" aria-label="Permalink to &quot;Decision 🏆&quot;">​</a></h2><p>We choose English because it is easier to translate from English to French when you know both languages than from French to English when you don&#39;t know French.</p><h2 id="consequence" tabindex="-1">Consequence <a class="header-anchor" href="#consequence" aria-label="Permalink to &quot;Consequence&quot;">​</a></h2><p>We decide to implement a translation dictionary with codes to aid the translation process. The template used for this example can be found on GitHub, and examples of more complex decisions are also provided.</p>',11),s=[i];function r(c,d,l,h,u,m){return a(),n("div",null,s)}const g=e(t,[["render",r]]);export{_ as __pageData,g as default};
